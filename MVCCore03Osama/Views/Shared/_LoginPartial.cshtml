@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @{
                    var _user = await UserManager.FindByNameAsync(User.Identity.Name);
                    var name = _user.Fname;
                    var Uip = _user.Id;
                }
                Hello @name





                @{string img = "def.jfif";
                    if (_user.ImgName != "def.jfif")
                    {
                        img = _user.Email + "/" + @_user.ImgName;

                    }
                    <img asp-append-version="true" width="40" height="40" style="border-radius: 50%;" src=@("~/Images/" + img) />
                }





            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link ">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
